<Application x:Class="MediaPlaylist.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:MediaPlaylist"
             
             xmlns:views="clr-namespace:MediaPlaylist.Views"
             xmlns:vm="clr-namespace:MediaPlaylist.ViewModels"
             xmlns:playlistViews="clr-namespace:MediaPlaylist.Views.PlaylistViews"
             xmlns:mediaViews="clr-namespace:MediaPlaylist.Views.MediaViews"
             xmlns:playlistVM="clr-namespace:MediaPlaylist.ViewModels.PlaylistViewModels"
             xmlns:mediaVM="clr-namespace:MediaPlaylist.ViewModels.MediaViewModels">

    <Application.Resources>
        <!-- Define the icons/images -->
        <!-- Icons from: https://icons8.com/icons -->
        <BitmapImage x:Key="Icon" UriSource="pack://application:,,,/Resources/icon.jpg"></BitmapImage>
        <BitmapImage x:Key="BackIcon" UriSource="pack://application:,,,/Resources/back-icon.png"></BitmapImage>

        <!-- Color Palette -->
        <Color x:Key="BackgroundColor">#1E1E1E</Color>
        <Color x:Key="PrimaryTextColor">#E0E0E0</Color>
        <Color x:Key="SecondaryTextColor">#A0A0A0</Color>
        <Color x:Key="ButtonBackgroundColor">#3A3A3A</Color>
        <Color x:Key="ButtonHoverColor">#505050</Color>
        <Color x:Key="AccentColor">#007ACC</Color>
        <Color x:Key="NavBackgroundColor">#2A2A2A</Color>
        <Color x:Key="ButtonHoverTextColor">#FFFFFF</Color>

        <!-- SolidColorBrushes for Controls -->
        <SolidColorBrush x:Key="BackgroundBrush" Color="{StaticResource BackgroundColor}"/>
        <SolidColorBrush x:Key="PrimaryTextBrush" Color="{StaticResource PrimaryTextColor}"/>
        <SolidColorBrush x:Key="SecondaryTextBrush" Color="{StaticResource SecondaryTextColor}"/>
        <SolidColorBrush x:Key="ButtonBackgroundBrush" Color="{StaticResource ButtonBackgroundColor}"/>
        <SolidColorBrush x:Key="ButtonHoverBrush" Color="{StaticResource ButtonHoverColor}"/>
        <SolidColorBrush x:Key="AccentBrush" Color="{StaticResource AccentColor}"/>
        <SolidColorBrush x:Key="NavBackgroundBrush" Color="{StaticResource NavBackgroundColor}"/>
        <SolidColorBrush x:Key="ButtonHoverTextBrush" Color="{StaticResource ButtonHoverTextColor}"/>

        <SolidColorBrush x:Key="ButtonUpdateBrush" Color="#004d00"/>
        <SolidColorBrush x:Key="ButtonRemoveBrush" Color="#4d0000"/>

        <!-- TextBlock Style -->
        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}" />
        </Style>

        <!-- Label Style -->
        <Style TargetType="Label">
            <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}" />
        </Style>

        <!-- The Default Button Style -->
        <Style x:Key="DefaultBtn" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border 
                            x:Name="border"
                            CornerRadius="5"
                            Background="{StaticResource ButtonBackgroundBrush}"
                            BorderBrush="{StaticResource AccentBrush}"
                            TextElement.Foreground="{StaticResource PrimaryTextBrush}"
                            BorderThickness="1"
                            Padding="8"
                            TextElement.FontWeight="Bold">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource ButtonHoverBrush}"/>
                                <Setter TargetName="border" Property="TextElement.Foreground" Value="{StaticResource ButtonHoverTextBrush}"/>
                                <Setter TargetName="border" Property="Cursor" Value="Hand"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- Style Media buttons -->
        <Style x:Key="MediaBtn" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border 
                            x:Name="border"
                            CornerRadius="10"
                            Margin="5"
                            Background="{StaticResource ButtonHoverBrush}"
                            BorderBrush="{StaticResource AccentBrush}"
                            TextElement.Foreground="{StaticResource PrimaryTextBrush}"
                            BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource ButtonBackgroundBrush}"/>
                                <Setter TargetName="border" Property="TextElement.Foreground" Value="{StaticResource ButtonHoverTextBrush}"/>
                                <Setter TargetName="border" Property="Cursor" Value="Hand"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Update playlist button style. -->
        <Style x:Key="UpdateBtnStyle" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border 
                            x:Name="border"
                            CornerRadius="7"
                            Background="{StaticResource ButtonBackgroundBrush}"
                            BorderBrush="{StaticResource ButtonUpdateBrush}"
                            TextElement.Foreground="{StaticResource PrimaryTextBrush}"
                            BorderThickness="2"
                            Padding="5"
                            Width="60"
                            Height="40"
                            TextElement.FontWeight="SemiBold">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource ButtonHoverBrush}"/>
                                <Setter TargetName="border" Property="TextElement.Foreground" Value="{StaticResource ButtonHoverTextBrush}"/>
                                <Setter TargetName="border" Property="Cursor" Value="Hand"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        
        <!-- Remove playlist button style. -->
        <Style x:Key="DeleteBtnStyle" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border 
                            x:Name="border"
                            CornerRadius="7"
                            Background="{StaticResource ButtonBackgroundBrush}"
                            BorderBrush="{StaticResource ButtonRemoveBrush}"
                            TextElement.Foreground="{StaticResource PrimaryTextBrush}"
                            BorderThickness="2"
                            Padding="5"
                            Width="60"
                            Height="40"
                            TextElement.FontWeight="SemiBold">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource ButtonHoverBrush}"/>
                                <Setter TargetName="border" Property="TextElement.Foreground" Value="{StaticResource ButtonHoverTextBrush}"/>
                                <Setter TargetName="border" Property="Cursor" Value="Hand"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- TextBox Style -->
        <Style TargetType="TextBox">
            <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
            <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}" />
            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Padding" Value="5"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>

        <!-- TreeViewItem style -->
        <Style TargetType="TreeViewItem">
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}"/>
            <Setter Property="Background" Value="{StaticResource NavBackgroundBrush}"/>
        </Style>

        <!-- Style combobox -->
        <Style TargetType="ComboBox">
            <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}"/>
            <Setter Property="Background" Value="{StaticResource NavBackgroundBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="BorderThickness" Value="1"/>

            <!-- ControlTemplate for ComboBox -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <!-- Border for the ComboBox -->
                            <Border
                                Name="ComboBoxBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                                <Grid>
                                    <!-- Drop-down button with arrow -->
                                    <ToggleButton 
                                        Name="ToggleButton"
                                        Grid.Column="2"
                                        Focusable="False"
                                        IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                        ClickMode="Press"
                                        Background="Transparent"
                                        BorderBrush="Transparent"
                                        HorizontalAlignment="Right"
                                        Width="30">
                                        <!-- Arrow Icon for Dropdown -->
                                        <Path x:Name="Arrow"
                                              Data="M 0 0 L 4 4 L 8 0 Z"
                                              Fill="{StaticResource PrimaryTextBrush}"
                                              HorizontalAlignment="Center" 
                                              VerticalAlignment="Center"/>

                                    </ToggleButton>
                                    <ContentPresenter 
                                        Name="ContentSite"
                                        IsHitTestVisible="False"
                                        Content="{TemplateBinding SelectionBoxItem}"
                                        ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                        ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                        Margin="4,0,25,0"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Left"/>
                                </Grid>
                            </Border>
                            <!-- ItemsPresenter (Dropdown List) -->
                            <Popup Name="Popup"
                                   Placement="Bottom"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   PopupAnimation="Slide">
                                <Grid Name="DropDown"
                                      SnapsToDevicePixels="True"
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="200"
                                      Background="{StaticResource NavBackgroundBrush}">
                                    <Border Name="DropDownBorder"
                                            BorderBrush="{StaticResource PrimaryTextBrush}"
                                            BorderThickness="1">
                                        <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                            <StackPanel 
                                                IsItemsHost="True"
                                                KeyboardNavigation.DirectionalNavigation="Contained"/>
                                        </ScrollViewer>
                                    </Border>
                                </Grid>
                            </Popup>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ComboBoxBorder" Property="Background" Value="{StaticResource ButtonHoverBrush}"/>
                                <Setter TargetName="ComboBoxBorder" Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                                <Setter TargetName="ToggleButton" Property="Background" Value="{StaticResource AccentBrush}"/>
                                <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource BackgroundBrush}"/>
                            </Trigger>
                            <Trigger Property="IsDropDownOpen" Value="True">
                                <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource AccentBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- ComboBoxItem style -->
        <Style TargetType="ComboBoxItem">
            <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}"/>
            <Setter Property="Background" Value="{StaticResource NavBackgroundBrush}"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Padding" Value="3"/>
            <Setter Property="Margin" Value="2"/>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource ButtonHoverBrush}"/>
                    <Setter Property="Cursor" Value="Hand" />
                </Trigger>

                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>


        <!-- Define a Style for ListView -->
        <Style TargetType="ListView" x:Key="MediaListView">
            <Setter Property="Background" Value="{StaticResource NavBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        </Style>

        <!-- DataTemplates for the application ViewModels -->
        <DataTemplate DataType="{x:Type vm:NavigationBarViewModel}">
            <views:NavigationBarView/>
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:StartPageViewModel}">
            <views:StartPageView/>
        </DataTemplate>

         <!-- Adding playlist -->
        <DataTemplate DataType="{x:Type playlistVM:AddPlaylistViewModel}">
            <playlistViews:AddPlaylistView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type playlistVM:PlaylistDetailsViewModel}">
            <playlistViews:PlaylistDetailsView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type playlistVM:UpdatePlaylistViewModel}">
            <playlistViews:UpdatePlaylistView/>
        </DataTemplate>

        <!-- Adding media --> 
        <DataTemplate DataType="{x:Type mediaVM:AddMediaViewModel}">
            <mediaViews:AddMediaView/>
        </DataTemplate>

    </Application.Resources>
</Application>
